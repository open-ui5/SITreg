--
--   Copyright 2016 SAP Mentors
--
--   Licensed under the Apache License, Version 2.0 (the "License");
--   you may not use this file except in compliance with the License.
--   You may obtain a copy of the License at
--
--       http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--

PROCEDURE "SITREG"."com.sap.sapmentors.sitreg.odataorganizer.procedures::EventUpdate" ( 
    IN inrow "SITREG"."com.sap.sapmentors.sitreg.data::SITreg.Event",
    IN oldrow "SITREG"."com.sap.sapmentors.sitreg.data::SITreg.Event",
    OUT error "SITREG"."com.sap.sapmentors.sitreg.data::SITreg.error"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   DEFAULT SCHEMA SITREG
   AS
BEGIN

    DECLARE lv_Count           INT;
    DECLARE lv_ID              string;
    DECLARE lv_Location        string;
    DECLARE lv_EventDate       DATE;
    DECLARE lv_StartTime       TIMESTAMP;
    DECLARE lv_EndTime         TIMESTAMP;
    DECLARE lv_MaxParticipants INTEGER;
    DECLARE lv_HomepageURL     string;
    DECLARE lv_CreatedBy       string;
    DECLARE lv_CreatedAt       DATE;
    DECLARE lv_ChangedBy       string;
    DECLARE lv_ChangedAt       DATE;

    DECLARE lv_Location_tmp        string;
    DECLARE lv_EventDate_tmp       DATE;
    DECLARE lv_StartTime_tmp       TIMESTAMP;
    DECLARE lv_EndTime_tmp         TIMESTAMP;
    DECLARE lv_MaxParticipants_tmp INTEGER;
    DECLARE lv_HomepageURL_tmp     string;


    SELECT * INTO lv_ID             
            , lv_Location       
            , lv_EventDate      
            , lv_StartTime      
            , lv_EndTime        
            , lv_MaxParticipants
            , lv_HomepageURL
            , lv_CreatedBy      
            , lv_CreatedAt      
            , lv_ChangedBy      
            , lv_ChangedAt
        FROM :inrow;
    -- Don't trust the provided Username. We read it from the current user
    SELECT CURRENT_USER INTO lv_ChangedBy FROM DUMMY;
    -- Check if provided Event ID belongs to the User
    SELECT COUNT("ID") INTO lv_Count 
      FROM "com.sap.sapmentors.sitreg.data::SITreg.Event"
      WHERE "ID" = lv_ID AND "History.CreatedBy" = lv_ChangedBy;
    -- Check CoOrganizer Table
    IF lv_Count = 0 THEN
        SELECT COUNT("EventID") INTO lv_Count 
          FROM "com.sap.sapmentors.sitreg.data::SITreg.CoOrganizer"
          WHERE "EventID"  = lv_ID 
            AND "UserName" = lv_ChangedBy
            AND "Active"   = 'Y';    
    END IF;
      
    IF lv_Count = 1 THEN
        SELECT "Location", "EventDate", "StartTime", "EndTime", "MaxParticipants", "HomepageURL"
            INTO lv_Location_tmp      
                , lv_EventDate_tmp      
                , lv_StartTime_tmp      
                , lv_EndTime_tmp        
                , lv_MaxParticipants_tmp
                , lv_HomepageURL_tmp    
            FROM "com.sap.sapmentors.sitreg.data::SITreg.Event"
            WHERE "ID" = lv_ID;
        -- OData call can also contain just single attributes. We have to preserve the data
        if lv_Location = ''       then lv_Location = lv_Location_tmp;               END IF;
        if lv_EventDate = ''      then lv_EventDate = lv_EventDate_tmp;             END IF;
        if lv_StartTime = ''      then lv_StartTime = lv_StartTime_tmp;             END IF;
        if lv_EndTime = ''        then lv_EndTime = lv_EndTime_tmp;                 END IF;
        if lv_MaxParticipants = 0 then lv_MaxParticipants = lv_MaxParticipants_tmp; END IF;
        if lv_HomepageURL = ''    then lv_HomepageURL = lv_HomepageURL_tmp;         END IF;
        
        IF lv_MaxParticipants <> lv_MaxParticipants_tmp THEN
            -- When MaxParticipants is changed, the Waiting List must be updated
            CALL "SITREG"."com.sap.sapmentors.sitreg.odataorganizer.procedures::UpdateWaitingList" (
                in_EventID            => :lv_ID,
                in_MaxParticipants    => :lv_MaxParticipants
            );
        END IF;
        
        UPDATE "com.sap.sapmentors.sitreg.data::SITreg.Event"
          SET   "Location"        = lv_Location
              , "EventDate"       = lv_EventDate
              , "StartTime"       = lv_StartTime
              , "EndTime"         = lv_EndTime
              , "MaxParticipants" = lv_MaxParticipants
              , "HomepageURL"     = lv_HomepageURL
              , "History.ChangedBy" = lv_ChangedBy
              , "History.ChangedAt" = CURRENT_TIMESTAMP
          WHERE "ID" = lv_ID;

    ELSE
        error = select 400 as http_status_code, 
                'Event does not exist' error_message, 
                '' detail from dummy;
    END IF;
END