PROCEDURE "SITREG"."com.sap.sapmentors.sitreg.odataparticipant.procedures::ParticipantCreate"(
		IN inrow "SITREG"."com.sap.sapmentors.sitreg.data::SITreg.Participant", 
		OUT error "SITREG"."com.sap.sapmentors.sitreg.data::SITreg.error"
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA SITREG
AS
lv_Free                 int := 0;
BEGIN
	DECLARE lv_Count            INT;
	DECLARE lv_ID               STRING;
	DECLARE lv_EventID          STRING;
	DECLARE lv_RegistrationTime TIMESTAMP;
	DECLARE lv_FirstName        STRING;
	DECLARE lv_LastName         STRING;
	DECLARE lv_EMail            STRING;
	DECLARE lv_MobilePhone      STRING;
	DECLARE lv_BioURL           STRING;
	DECLARE lv_Twitter          STRING;
	DECLARE lv_RSVP             STRING;
	DECLARE lv_PreEveningEvent  STRING;
	DECLARE lv_PostEveningEvent STRING;
	DECLARE lv_RelationToSAP    STRING;
	DECLARE lv_Receipt          STRING;
	DECLARE lv_ReceiptCompany   STRING;
	DECLARE lv_ReceiptAddress   STRING;
    DECLARE lv_CreatedBy        string;
    DECLARE lv_CreatedAt        string;
    DECLARE lv_ChangedBy        string;
    DECLARE lv_ChangedAt        string;

	SELECT * INTO lv_ID              
        , lv_EventID         
        , lv_RegistrationTime
        , lv_FirstName       
        , lv_LastName        
        , lv_EMail           
        , lv_MobilePhone     
        , lv_BioURL          
        , lv_Twitter         
        , lv_RSVP            
        , lv_PreEveningEvent 
        , lv_PostEveningEvent
        , lv_RelationToSAP   
        , lv_Receipt         
        , lv_ReceiptCompany  
        , lv_ReceiptAddress  
        , lv_CreatedBy      
        , lv_CreatedAt      
        , lv_ChangedBy      
        , lv_ChangedAt          
        FROM :inrow;

    -- Don't trust the provided Username. we read it from the current user
	SELECT CURRENT_USER
		INTO lv_CreatedBy
		FROM DUMMY;
	
	-- Is the current user already registered for the event?
    SELECT COUNT(ID) INTO lv_Count 
      FROM "com.sap.sapmentors.sitreg.odataparticipant.procedures::ParticipantRead"
      WHERE "EventID" = lv_EventID AND "History.CreatedBy" = lv_CreatedBy;
    
    IF (lv_Count <> 1) THEN

        -- Read free seats
    	SELECT "Free" INTO lv_Free
    	    FROM  "com.sap.sapmentors.sitreg.odataparticipant.procedures::RegistrationNumbersRead"
    	    WHERE "EventID" = lv_EventID;
    	
    	IF ( lv_Free <= 0 ) THEN
    	    lv_RSVP = 'W';
    	END IF;

    	SELECT "com.sap.sapmentors.sitreg.data::participantId".NEXTVAL
    		INTO lv_ID
    		FROM dummy;
    		
    	INSERT INTO "com.sap.sapmentors.sitreg.data::SITreg.Participant" 
    	    VALUES(lv_ID              
            , lv_EventID         
            , CURRENT_TIMESTAMP
            , lv_FirstName       
            , lv_LastName        
            , lv_EMail           
            , lv_MobilePhone     
            , lv_BioURL          
            , lv_Twitter         
            , lv_RSVP            
            , lv_PreEveningEvent 
            , lv_PostEveningEvent
            , lv_RelationToSAP   
            , lv_Receipt         
            , lv_ReceiptCompany  
            , lv_ReceiptAddress  
            , lv_CreatedBy      
            , CURRENT_TIMESTAMP      
            , lv_ChangedBy      
            , CURRENT_TIMESTAMP
            );
    
        CALL "SITREG"."com.sap.sapmentors.sitreg.odataparticipant.procedures::TicketCreate" ( 
            lv_ID,
            lv_EventID,
            lv_FirstName,
            lv_LastName,
            lv_EMail,
            lv_CreatedBy
        );
    ELSE
		error = SELECT 400 AS http_status_code, 
					'Insert failed' AS error_message, 
					'Participant is already registered for this event' AS detail
				FROM dummy;
	END IF;
END;
