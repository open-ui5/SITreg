--
--   Copyright 2016 SAP Mentors
--
--   Licensed under the Apache License, Version 2.0 (the "License");
--   you may not use this file except in compliance with the License.
--   You may obtain a copy of the License at
--
--       http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--
PROCEDURE "SITREG"."com.sap.sapmentors.sitreg.odataparticipant.procedures::ParticipantUpdate" ( 
    IN inrow  "SITREG"."com.sap.sapmentors.sitreg.data::SITreg.Participant",
    OUT error "SITREG"."com.sap.sapmentors.sitreg.data::SITreg.error"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY DEFINER
   DEFAULT SCHEMA SITREG
   AS
BEGIN

	DECLARE lv_rank             INT;
	DECLARE lv_Count            INT;
	DECLARE lv_count_waiting    INT;
	DECLARE lv_ID               STRING;
	DECLARE lv_ID_Waiting       STRING;
	DECLARE lv_EventID          STRING;
	DECLARE lv_RegistrationTime TIMESTAMP;
	DECLARE lv_FirstName        STRING;
	DECLARE lv_LastName         STRING;
	DECLARE lv_EMail            STRING;
	DECLARE lv_MobilePhone      STRING;
	DECLARE lv_BioURL           STRING;
	DECLARE lv_Twitter          STRING;
	DECLARE lv_RSVP             STRING;
	DECLARE lv_PreEveningEvent  STRING;
	DECLARE lv_PostEveningEvent STRING;
	DECLARE lv_RelationToSAP    STRING;
	DECLARE lv_Receipt          STRING;
	DECLARE lv_ReceiptCompany   STRING;
	DECLARE lv_ReceiptAddress   STRING;
    DECLARE lv_CreatedBy        string;
    DECLARE lv_CreatedAt        string;
    DECLARE lv_ChangedBy        string;
    DECLARE lv_ChangedAt        string;

	DECLARE lv_FirstName_tmp        STRING;
	DECLARE lv_LastName_tmp         STRING;
	DECLARE lv_EMail_tmp            STRING;
	DECLARE lv_MobilePhone_tmp      STRING;
	DECLARE lv_BioURL_tmp           STRING;
	DECLARE lv_Twitter_tmp          STRING;
	DECLARE lv_RSVP_tmp             STRING;
	DECLARE lv_PreEveningEvent_tmp  STRING;
	DECLARE lv_PostEveningEvent_tmp STRING;
	DECLARE lv_RelationToSAP_tmp    STRING;
	DECLARE lv_Receipt_tmp          STRING;
	DECLARE lv_ReceiptCompany_tmp   STRING;
	DECLARE lv_ReceiptAddress_tmp   STRING;

    DECLARE lv_msg                  STRING;
    
	SELECT * INTO lv_ID              
        , lv_EventID         
        , lv_RegistrationTime
        , lv_FirstName       
        , lv_LastName        
        , lv_EMail           
        , lv_MobilePhone     
        , lv_BioURL          
        , lv_Twitter         
        , lv_RSVP            
        , lv_PreEveningEvent 
        , lv_PostEveningEvent
        , lv_RelationToSAP   
        , lv_Receipt         
        , lv_ReceiptCompany  
        , lv_ReceiptAddress  
        , lv_CreatedBy      
        , lv_CreatedAt      
        , lv_ChangedBy      
        , lv_ChangedAt          
        FROM :inrow;

    SELECT "EventID"
        , "RegistrationTime"
        , "FirstName"
        , "LastName"
        , "EMail"
        , "MobilePhone"
        , "BioURL"
        , "Twitter"
        , "RSVP"
        , "PreEveningEvent"
        , "PostEveningEvent"
        , "RelationToSAP"
        , "Receipt"
        , "ReceiptCompany"
        , "ReceiptAddress"
        , "History.CreatedBy"
        INTO lv_EventID
            , lv_RegistrationTime
            , lv_FirstName_tmp       
            , lv_LastName_tmp        
            , lv_EMail_tmp           
            , lv_MobilePhone_tmp     
            , lv_BioURL_tmp
            , lv_Twitter_tmp         
            , lv_RSVP_tmp            
            , lv_PreEveningEvent_tmp 
            , lv_PostEveningEvent_tmp
            , lv_RelationToSAP_tmp   
            , lv_Receipt_tmp         
            , lv_ReceiptCompany_tmp  
            , lv_ReceiptAddress_tmp
            , lv_ChangedBy
        FROM "com.sap.sapmentors.sitreg.data::SITreg.Participant"
        WHERE "ID" = lv_ID;
    
    -- Handle change from registered to can't make it
    IF      lv_RSVP_tmp = 'Y'
        AND lv_RSVP     = 'N' 
        THEN

        -- Update registration time of current participant
        SELECT CURRENT_TIMESTAMP INTO lv_RegistrationTime FROM DUMMY;

        -- Check if there is a waiting list
        SELECT COUNT(*) INTO lv_count_waiting
            FROM "com.sap.sapmentors.sitreg.data::SITreg.Participant"
                WHERE "EventID" = lv_EventID
                  AND "RSVP" = 'W';
        IF lv_count_waiting > 0 THEN
            -- read the first one
            SELECT "ID" AS "ID_Waiting" INTO lv_ID_Waiting
            FROM( 
                SELECT "ID", 
                RANK() OVER ( PARTITION BY "EventID" ORDER BY "RegistrationTime" ASC ) AS "Rank"
                    FROM "com.sap.sapmentors.sitreg.data::SITreg.Participant"
                    WHERE "EventID" = lv_EventID
                      AND "RSVP" = 'W'
                )
            WHERE "Rank" = 1;
            
            IF lv_ID_Waiting <> '' THEN
                -- Confirm first waiting participant
                UPDATE "com.sap.sapmentors.sitreg.data::SITreg.Participant"
                      SET   "RSVP"              = 'Y'
                          , "History.ChangedBy" = lv_ChangedBy
                          , "History.ChangedAt" = CURRENT_TIMESTAMP
                      WHERE "ID" = lv_ID_Waiting;
            END IF;
        END IF;
    ELSE
        CALL "SITREG"."com.sap.sapmentors.sitreg.odataparticipant.procedures::GetRSVPrespectingFreeSeats" (
            in_EventID => :lv_EventID,
            in_RSVP    => :lv_RSVP,
            out_RSVP   => :lv_RSVP );
    END IF;
    -- OData call can also contain just single attributes. We have to preserve the data
    if lv_FirstName = ''        then lv_FirstName        = lv_FirstName_tmp;        end if;
    if lv_LastName = ''         then lv_LastName         = lv_LastName_tmp;         end if;
    if lv_EMail = ''            then lv_EMail            = lv_EMail_tmp;            end if;
    if lv_MobilePhone = ''      then lv_MobilePhone      = lv_MobilePhone_tmp;      end if;
    if lv_BioURL = ''           then lv_BioURL           = lv_BioURL_tmp;           end if;
    if lv_Twitter = ''          then lv_Twitter          = lv_Twitter_tmp;          end if;
    if lv_RSVP = ''             then lv_RSVP             = lv_RSVP_tmp;             end if;
    if lv_PreEveningEvent = ''  then lv_PreEveningEvent  = lv_PreEveningEvent_tmp;  end if;
    if lv_PostEveningEvent = '' then lv_PostEveningEvent = lv_PostEveningEvent_tmp; end if;
    if lv_RelationToSAP = ''    then lv_RelationToSAP    = lv_RelationToSAP_tmp;    end if;
    if lv_Receipt = ''          then lv_Receipt          = lv_Receipt_tmp;          end if;
    if lv_ReceiptCompany = ''   then lv_ReceiptCompany   = lv_ReceiptCompany_tmp;   end if;
    if lv_ReceiptAddress = ''   then lv_ReceiptAddress   = lv_ReceiptAddress_tmp;   end if;

    UPDATE "com.sap.sapmentors.sitreg.data::SITreg.Participant"
      SET   "RegistrationTime"  = lv_RegistrationTime
          , "FirstName"         = lv_FirstName
          , "LastName"          = lv_LastName
          , "EMail"             = lv_EMail
          , "MobilePhone"       = lv_MobilePhone
          , "BioURL"            = lv_BioURL
          , "Twitter"           = lv_Twitter
          , "RSVP"              = lv_RSVP
          , "PreEveningEvent"   = lv_PreEveningEvent
          , "PostEveningEvent"  = lv_PostEveningEvent
          , "RelationToSAP"     = lv_RelationToSAP 
          , "Receipt"           = lv_Receipt
          , "ReceiptCompany"    = lv_ReceiptCompany
          , "ReceiptAddress"    = lv_ReceiptAddress
          , "History.ChangedBy" = lv_ChangedBy
          , "History.ChangedAt" = CURRENT_TIMESTAMP
      WHERE "ID" = lv_ID;

    IF 1 = 2 THEN
        error = select 400 as http_status_code, 
                    'Update Executed' error_message, 
                    '' detail from dummy;
    END IF;
    
END